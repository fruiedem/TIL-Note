{
	"nodes":[
		{"id":"803b4a99cdc2dd64","type":"text","text":"컨트롤러 : SafetyEducationController\n\n```java\n    @GetMapping\n    @ResponseStatus(HttpStatus.OK)\n    public GetSafetyEducationListResponse getSafetyEducations(Principal principal,\n                                                              @PathVariable(value = \"projectSeq\") Long projectSeq,\n                                                              @RequestParam(value = \"searchKey\", required = false) String searchKey,\n                                                              @RequestParam(value = \"searchValue\", required = false) String searchValue,\n                                                              @RequestParam(value = \"searchDivision\", required = false) String searchDivision,\n                                                              @RequestParam(value = \"status\",required = false) String status) {\n        log.debug(\"사용자 다건 업로드 : projectSeq - {}\", projectSeq);\n        return safetyEducationService.getSafetyEducations(principal, projectSeq, searchKey, searchValue,searchDivision, searchDivisionCode,status);\n    }\n```","x":60,"y":-1440,"width":1585,"height":380},
		{"id":"6cf0f5198c70da20","type":"text","text":"","x":2040,"y":-1280,"width":250,"height":60,"color":"1"},
		{"id":"c620dc8521136bf1","type":"text","text":"조회","x":-680,"y":-1280,"width":250,"height":60},
		{"id":"a04dd5fa8c0257cf","type":"text","text":"검색 필터에 지정되는 searchDivisionCode 추가 전달","x":-360,"y":-1340,"width":350,"height":60,"color":"2"},
		{"id":"95e61727aec383e3","type":"text","text":"DB의 division 값(code)을 가져와서 serviceCode 를 이용하여 code 가 맵핑되는 name 값으로 대체","x":1940,"y":-475,"width":500,"height":50,"color":"1"},
		{"id":"b6d9d4651ec64e7e","type":"text","text":"List<SafetyEducation> educations = safetyEducationRepository.searching(projectSeq, keySearch, searchValue, searchDivision, status);\n에서 divsion 값이 설정됨","x":1740,"y":-780,"width":900,"height":60},
		{"id":"dd73a12d79b2f7aa","type":"text","text":"\nproject-safety/232/safety-education(POST)\n\ndivision: 채용시 교육\ntitle: 0120 안전교육 등록 테스트2\ntrainingDate: 20250120\nstartTrainingTime: 00:00\nendTrainingTime: 00:30\ntrainingContent: ○ 산업안전 및 사고 예방에 관한 사항\n○ 산업보건 및 직업병 예방에 관한 사항\n○ 위험성 평가에 관한 사항\n○ 산업안전보건법령 및 산업재해보상보험 제도에 관한 사항\n○ 직무스트레스 예방 및 관리에 관한 사항\n○ 직장 내 괴롭힘, 고객의 폭언 등으로 인한 건강장해 예방 및 관리에 관한 사항\n○ 기계ᆞ기구의 위험성과 작업의 순서 및 동선에 관한 사항\n○ 작업 개시 전 점검에 관한 사항\n○ 정리정돈 및 청소에 관한 사항\n○ 사고 발생 시 긴급조치에 관한 사항\n○ 물질안전보건자료에 관한 사항\ntrainerSequences: 11243\nattendeesSequences: \nparticipantInfos[0].participantSequence: \nparticipantInfos[0].companyName: one\nparticipantInfos[0].numberOfPeople: 2\nworkItemSequences: \ntrainingImages: (이진)","x":-320,"y":2100,"width":420,"height":480},
		{"id":"7f8acf8b9346922b","type":"text","text":"","x":460,"y":2410,"width":250,"height":60},
		{"id":"cc91b4c634d0e7d3","type":"text","text":"divisionCode 추가 전달\n(CommonCode 값)","x":-215,"y":2740,"width":250,"height":80},
		{"id":"15bbd88e191fa442","type":"text","text":"divisionCode 데이터 추가 전달 확인","x":380,"y":2740,"width":250,"height":60},
		{"id":"b8c7f552f5d733ec","type":"text","text":"등록","x":-260,"y":1900,"width":250,"height":60},
		{"id":"f658be3e3a4236da","type":"text","text":"수정 (PUT)\nproject-safety/232/safety-education/3","x":-300,"y":3180,"width":250,"height":120},
		{"id":"7e0bb7e0d6a37e84","type":"text","text":"서비스 : safetyEducationService.getSafetyEducations\n```java\npublic GetSafetyEducationListResponse getSafetyEducations(Principal principal, Long projectSeq, String keySearch, String searchValue, String searchDivision, String searchDivisionCode, String status) {\n        User user = userRepository.findByUserId(principal.getName())\n                .orElseThrow(() -> new BadRequestException(ErrorCode.USER_NOT_FOUND));\n\n        String companyType = Optional.ofNullable(user.getCompany())\n                .map(CompanyRegistrationManagement::getCategory)\n                .map(CommonCode::getCode)\n                .orElse(Optional.ofNullable(user.getCompanyCategory()).map(CommonCode::getCode).orElse(null));\n\n        validatePartnerOrHostCompanyPermission(companyType);\n\n        if (!StringUtils.isBlank(searchValue)) {\n            SafetyEducationSearchTypeCode searchType = SafetyEducationSearchTypeCode.parseCode(keySearch);\n\n            // Group the conditions properly for clarity\n            if ((searchType.equals(SafetyEducationSearchTypeCode.ALL) || searchType.equals(SafetyEducationSearchTypeCode.ATTENDEES))\n                    && !isValidNumber(searchValue)\n                    && !isValidDate(searchValue)) {\n\n                // Return empty response if the search value is invalid\n                return GetSafetyEducationListResponse.builder()\n                        .safetyEducationInfo(new ArrayList<>())\n                        .build();\n            }\n        }\n        Map<Long, List<ProjectFile>> projectFileMap = safetyService.getProjectFileMapByMenuSeq(getProjectMenuForSafetyEducation().getSequence());\n\n        List<SafetyEducation> educations = safetyEducationRepository.searching(projectSeq, keySearch, searchValue, searchDivision, status);\n\n        boolean isPartnerCompany= CompanyRegistrationManagementCategoryCode.PARTNER.getCode().equals(companyType);\n\n        if(isPartnerCompany){\n            educations = educations\n                    .stream()\n                    .filter(education -> {\n                        if (Objects.nonNull(education.getCreator()))\n                            return education.getCreator().getCompanyOrCompanyName().equalsIgnoreCase(user.getCompanyOrCompanyName());\n                        return false;\n                    })\n                    .collect(Collectors.toList());\n        }\n\n        List<GetSafetyEducationListResponse.SafetyEducationInfo> educationListInfo = new ArrayList<>();\n        Project project = projectRepository.findBySequence(projectSeq)\n                .orElseThrow(() -> new BadRequestException(ErrorCode.PROJECT_NOT_FOUND));\n        final boolean holdValue = checkShowApproval(user.getSequence(), project.getSequence());\n        educations.forEach(education -> {\n            boolean isShowApproval = holdValue;\n            List<GetSafetyEducationListResponse.Trainer> trainerList = safetyEducationTrainerRepository\n                    .findBySafetyEducationSequenceAndIsUseSequence(education.getSequence(), 88L)\n                    .stream()\n                    .map(trainer -> GetSafetyEducationListResponse.Trainer\n                            .builder()\n                            .sequence(trainer.getSequence())\n                            .userId(trainer.getUser() != null ? trainer.getUser().getUserId() : null)\n                            .userName(trainer.getUser() != null ? trainer.getUser().getName() : null)\n                            .build()\n                    )\n                    .collect(toList());\n            int totalAttendee = getTotalAttendee(education.getSequence(), 88L);\n            String modifier = education.getUpdater() != null ? education.getUpdater().getName() : null;\n            String registrant = education.getCreator() != null ? education.getCreator().getName() : null;\n            if (education.getStatus() != null && education.getStatus().equals(SafetyEducationStatusType.COMPLETED)) {\n                isShowApproval = false;\n            }\n            educationListInfo.add(GetSafetyEducationListResponse.SafetyEducationInfo.builder()\n                    .sequence(education.getSequence())\n                    .division(education.getDivision())\n                    .title(education.getTitle())\n                    .totalParticipants(education.getParticipantTotal())\n                    .trainingDate(DateTimeUtil.localDateTimeToString(education.getTrainingDate()))\n                    .startTrainingTime(DateTimeUtil.localTimeToString(education.getStartTrainingTime()))\n                    .endTrainingTime(DateTimeUtil.localTimeToString(education.getEndTrainingTime()))\n                    .attendees(buildAttendeesInfo(education))\n                    .attachments(safetyService.buildFromAttachmentsInfo(projectFileMap.get(education.getSequence()), false))\n                    .modifier(modifier)\n                    .registrant(registrant)\n                    .totalAttendees(totalAttendee)\n                    .teachers(trainerList)\n                    .status(education.getStatus())\n                    .registrationDate(DateTimeUtil.localDateTimeToString(education.getCreateDateTime()))\n                    .modificationDate(DateTimeUtil.localDateTimeToString(education.getUpdateDateTime()))\n                    .isShowApproval(isShowApproval)\n                    .build());\n        });\n\n        return GetSafetyEducationListResponse.builder()\n                .safetyEducationInfo(educationListInfo)\n                .build();\n    }\n\n```","x":60,"y":-820,"width":1585,"height":740},
		{"id":"9c48bbf2e8b190e0","x":760,"y":240,"width":764,"height":106,"type":"text","text":"```java\nIsUseCode isUse = IsUseCode.parseCode(isUseCode);\n            CommonCode code = codeService.getCodeObject(isUse.getCode());\n```"}
	],
	"edges":[
		{"id":"c9e4e5530a03e8b4","fromNode":"dd73a12d79b2f7aa","fromSide":"bottom","toNode":"cc91b4c634d0e7d3","toSide":"top"},
		{"id":"575929ca15d8ff95","fromNode":"6cf0f5198c70da20","fromSide":"left","toNode":"803b4a99cdc2dd64","toSide":"right"},
		{"id":"fc67ef1a1d9c7549","fromNode":"c620dc8521136bf1","fromSide":"right","toNode":"803b4a99cdc2dd64","toSide":"left"},
		{"id":"eeb6876cffabd47b","fromNode":"95e61727aec383e3","fromSide":"left","toNode":"7e0bb7e0d6a37e84","toSide":"right"},
		{"id":"193c322ad0ab3a17","fromNode":"b6d9d4651ec64e7e","fromSide":"bottom","toNode":"95e61727aec383e3","toSide":"top"},
		{"id":"37c293a52f4ea097","fromNode":"803b4a99cdc2dd64","fromSide":"bottom","toNode":"7e0bb7e0d6a37e84","toSide":"top"}
	]
}